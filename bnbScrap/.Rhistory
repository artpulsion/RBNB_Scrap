ids.houses <- c()
prices.houses <- c()
# read the page
webpage.url <- read_html(url_city)
# get the timestamp
timestamps <- Sys.time()
# get the price
price.houses.class <- "_1m8bb6v"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- current.price.houses[grepl(price.pattern, current.price.houses)]
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._1m8bb6v"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)
View(current.price.houses)
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)%>% html_text()
current.price.houses
# get the price
price.houses.class <- "._1m8bb6v"
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._1m8bb6v"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)%>% html_text()
current.price.houses
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._1m8bb6v"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)
current.price.houses
current.price.houses[[1]]
current.price.houses[1]
current.price.houses[5]
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class)
current.price.houses
current.price.houses[[1]]
current.price.houses[1]
current.price.houses[1][1]
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_attr("span")
current.price.houses
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses
current.price.houses <- current.price.houses[grepl(price.pattern, current.price.houses)]
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._1m8bb6v"
price.pattern <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
price.patterns <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._hylizj6"
price.patterns <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- current.price.houses[grepl(price.pattern, current.price.houses)]
current.price.houses
# get the price
price.houses.class <- "._hylizj6"
price.patterns <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- current.price.houses[grepl(price.pattern, current.price.houses)]
current.price.houses <- gsub( pattern = price.pattern, replacement = "", x = current.price.houses)
price.patterns <- c("1", "2", "3", "4", "5", "6", "7", "8", "9")
library(stringr)
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
as.numeric(str_extract_all(current.price.houses, "[0-9]+))
)
)
as.numeric(str_extract_all(current.price.houses, "[0-9]+"))
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+"))
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses %<>% as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R', encoding = 'UTF-8')
library(bnbScrap)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity()
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity()
View(infos.city)
infos.city$prices.city
library(bnbScrap)
bnbScrap:::getInfosCity()
infos.city
hist(infos.city$prices.city)
hist(infos.city$prices.city, breaks = 20)
hist(infos.city$prices.city, breaks = 50)
infos.city
as.data.frame(infos.city)
a<-as.data.frame(infos.city)
View(a)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
library(bnbScrap)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity()
getInfosCity(tf.df = TRUE)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity(tf.df = TRUE)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
View(infos.city)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity(tf.df = T)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
View(infos.city)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
getInfosCity(tf.df = T)
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbScrap/R/getInfosCity.R')
a<-getInfosCity(tf.df = T)
View(a)
View(a)
hist(a)
hist(a$prices_houses)
library(googleway)
install.packages("googleway")
key <- 'AIzaSyBA-mEeBm_gta4wqxLewiGrO_UmHKWoP0E'
library(googleway)
key <- 'AIzaSyBA-mEeBm_gta4wqxLewiGrO_UmHKWoP0E'
df_places <- google_places(search_string = "cafe",
location = c(-37.81827, 144.9671),   ## melbourne, AU
key = key)
df_places$results$name
df_places
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getInfosCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getInfosCity.R')
getInfosCity(city = 'Paris')
library(bnbScrap)
getInfosCity(city = 'Paris')
getInfosCity(city = 'Paris')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getInfosCity.R')
paris.houses <- getInfosCity(city = 'Paris', is.df = TRUE)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getInfosCity.R')
getInfosCity <- function(city, is.df) {
# remove warnings
options(warn=-1)
############################################
#
# INITIAL PAGE
#
############################################
# get the url for the first page of the current city
url_city <- sprintf( "https://www.airbnb.pt/s/%s", city )
# structure containers
timeframes <- c()
ids.houses <- c()
prices.houses <- c()
# read the page
webpage.url <- read_html(url_city)
# get the timestamp
timestamps <- Sys.time()
# get the number of pages
nbr.pages.class <- "._1am0dt"
nbr.pages.str <- webpage.url %>% html_nodes(nbr.pages.class) %>% html_text() %>% as.integer() %<>% na.omit
nbr.pages <- max(nbr.pages.str)
# get the id
id.houses.class <- "._1rp5252"
current.id.houses <- webpage.url %>% html_nodes(id.houses.class) %>% html_attr("id")
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit()
# append the ids, prices and timeframes
ids.houses <- c(ids.houses, current.id.houses)
prices.houses <- c(prices.houses, current.price.houses)
timeframes <- c(timeframes, rep(timestamps, length(current.id.houses)))
cat("Initial page -- \n")
cat(sprintf("Number of houses: %d \n", length(current.id.houses)))
cat(sprintf("Number of prices %d \n \n", length(current.price.houses) ))
############################################
#
# OTHERS PAGE
#
############################################
for (index.page in 1L:(nbr.pages-1)) {
# construct the url for the next webpage to scrap
current.url <- paste0("https://www.airbnb.pt/s/Porto--Portugal/homes?query=Porto%2C%20Portugal&refinement_paths%5B%5D=%2Fhomes&allow_override%5B%5D=&place_id=ChIJwVPhxKtlJA0RvBSxQFbZSKY&tab_id=all_tab&s_tag=YYFR8cTp&section_offset=", index.page)
# get the current timestamps
timestamps <- Sys.time()
# Fetch the web page based on the url
webpage.url <- read_html(current.url)
# get the informations related to the ids houses and append it into the base
current.id.houses <- webpage.url %>% html_nodes(id.houses.class) %>% html_attr("id")
ids.houses <- c(ids.houses, current.id.houses)
# get the informations related to the prices houses and append it into the base
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit()
prices.houses <- c(prices.houses, current.price.houses)
# construct the timestamps
timeframes <- c(timeframes, rep(timestamps, length(current.id.houses)))
# advertize about the current pagination
cat(sprintf("Current page: %d \n", index.page + 1))
cat(sprintf("Number of houses: %d \n", length(current.id.houses)))
cat(sprintf("Number of prices: %d \n", length(current.price.houses) ))
cat(sprintf("Accumulated number of houses: %d \n\n", length(prices.houses)))
}
cat(sprintf("FINAL numbers: %d \n\n", length(prices.houses)))
if (isTRUE(is.df)) {
# build an object to return the whole informations and return it
infos.city <- list( 'uid_houses' = ids.houses,
'prices_houses' = prices.houses,
'timestamps' = timeframes ) %>% as.data.frame()
}
else {
# build an object to return the whole informations and return it
infos.city <- list( 'uid_houses' = ids.houses,
'prices_houses' = prices.houses,
'timestamps' = timeframes )
}
return(infos.city)
}
paris.houses <- getInfosCity(city = 'Paris', is.df = TRUE)
View(paris.houses)
library(googleway)
key <- 'AIzaSyBA-mEeBm_gta4wqxLewiGrO_UmHKWoP0E'
df_places <- google_places(search_string = "Paris", key = key)
df_places
library(readxl)
read_xlsx('data/most-popular-cities.xlsx')
cities.df <- read_xlsx('data/most-popular-cities.xlsx')
View(cities.df)
for (city in cities.df$City) {
print(city)
}
library(googleway)
library(readxl)
cities.df <- read_xlsx('data/most-popular-cities.xlsx')
key <- 'AIzaSyBA-mEeBm_gta4wqxLewiGrO_UmHKWoP0E'
df_places <- google_places(search_string = city, key = key)
df_places
df_places$results
df_places$results$geometry
df.city <- google_places(search_string = city, key = key)
df.city$results$name
df.city$results$place_id
city <- list('google_place_id' = df.city$results$place_id, 'name' = df.city$results$name, 'lng' = df.city$results$geometry$location$lng, 'lat' = df.city$results$geometry$location$lat)
city
library(httr)
library(bnbScrap)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
city = 'Porto'
# get the place id for the current city
gp_id <- bnbScrap:::sqlSendQuery(sprintf("select * from city where name = '%s'", city)) %>% pull(gp_id)
# get the url for the first page of the current city
params.city <- sprintf("https://www.airbnb.pt/s/%s/homes?", city)
weird.part.url <- paste0("refinement_paths%5B%5D=%2Fhomes&allow_override%5B%5D=&query=", city)
place.id.url <- paste0('&place_id=', gp_id)
url_city <- paste0(paste(params.city, weird.part.url, place.id.url, sep=""), '&tab_id=all_tab&s_tag=ZJlVVTab')
# structure containers
timeframes <- c()
ids.houses <- c()
prices.houses <- c()
# read the page
webpage.url <- read_html(url_city)
# get the timestamp
timestamps <- Sys.time()
# get the number of pages
nbr.pages.class <- "._1am0dt"
nbr.pages.str <- webpage.url %>% html_nodes(nbr.pages.class) %>% html_text() %>% as.integer() %<>% na.omit
nbr.pages <- max(nbr.pages.str)
# get the id
id.houses.class <- "._1rp5252"
current.id.houses <- webpage.url %>% html_nodes(id.houses.class) %>% html_attr("id")
# get the price
price.houses.class <- "._hylizj6"
current.price.houses <- webpage.url %>% html_nodes(price.houses.class) %>% html_text()
current.price.houses <- as.numeric(str_extract_all(current.price.houses, "[0-9]+")) %>% na.omit()
# append the ids, prices and timeframes
ids.houses <- c(ids.houses, current.id.houses)
prices.houses <- c(prices.houses, current.price.houses)
prices.houses
id.houses.class
id.houses
ids,ids.houses
ids.houses
url_city
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
############################################
#
# OTHERS PAGE
#
############################################
current.url <- paste0(url_city, "&section_offset=")
current.url
index.page = 17
current.url <- paste0(current.url, index.page)
current.url
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
############################################
#
# OTHERS PAGE
#
############################################
current.url <- paste0(url_city, "&section_offset=")
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
############################################
#
# OTHERS PAGE
#
############################################
current.url <- paste0(url_city, "&section_offset=%s")
current.url
hey <- sprintf(current.url, index.page)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
############################################
#
# OTHERS PAGE
#
############################################
current.url <- paste0(url_city, "&section_offset=%f")
hey <- sprintf(current.url, index.page)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
############################################
#
# OTHERS PAGE
#
############################################
current.url <- paste0(url_city, "&section_offset=")
hey <- sprintf(current.url, index.page)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
hey <- paste0(current.url, index.page)
hey
index.page = 197867
hey <- paste0(current.url, index.page)
hey
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
index.page =11
# construct the url for the next webpage to scrap
current.url <- paste0(base.other.url, index.page)
# Add the base of the other url's
base.other.url <- paste0(url_city, "&section_offset=")
# construct the url for the next webpage to scrap
current.url <- paste0(base.other.url, index.page)
current.url
library(bnbScrap)
bnbScrap:::cities.df
houses_porto <- bnbScrap:::getHousesCity(city = 'Porto', is.df = TRUE)
View(houses_porto)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
url.user <- "www.airbnb.pt/rooms/%f"
url.user <- sprintf(url.user, id)
id = 23631990
url.user <- sprintf(url.user, id)
bnb_flat_id = id
bnb_flat_id
bnb_flat_id %<>% as.integer()
url.user <- "www.airbnb.pt/rooms/%f"
url.user <- sprintf(url.user, id)
for (id in bnb_flat_id) {
url.user <- sprintf(url.user, id)
}
url.user
bnb_flat_id
bnb_flat_id %<>% as.numeric()
url.user <- "www.airbnb.pt/rooms/%f"
for (id in bnb_flat_id) {
url.user <- sprintf(url.user, id)
}
id
url.user
bnb_flat_id %<>% as.integer()
url.user <- "www.airbnb.pt/rooms/%d"
for (id in bnb_flat_id) {
url.user <- sprintf(url.user, id)
}
url.user
webpage.url <- read_html(url.user)
url.user <- sprintf(url.user, id)
url.user
webpage.url <- read_html(url.user)
url_user <- sprintf(url.user, id)
webpage.url <- read_html(url.user)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
bnb_flat_id %<>% as.integer()
url.user <- "www.airbnb.pt/rooms/%d"
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
bnb_flat_id %<>% as.numeric()
url.user <- "www.airbnb.pt/rooms/%d"
url.user <- sprintf(url.user, id)
webpage.url <- read_html(url.user)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
bnb_flat_id %<>% as.numeric()
url.user <- "www.airbnb.pt/rooms/%d"
id <- 23631990
url.user <- "www.airbnb.pt/rooms/%d"
url.user <- sprintf(url.user, id)
webpage.url <- read_html(url.user)
library(bnbScrap)
webpage.url <- read_html(url.user)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
webpage.url <- read_html("https://www.airbnb.pt/rooms/23631990")
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
bnb_flat_id %<>% as.numeric()
url.user <- "https://www.airbnb.pt/rooms/%d"
url.user <- sprintf(url.user, id)
webpage.url <- read_html(url.user)
# get the number of pages
user.class <- "._110nrr2"
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
page <- webpage.url %>% html_nodes(user.class) %>% html_text()
page
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
bnb_flat_id %<>% as.numeric()
url.user <- "https://www.airbnb.pt/rooms/%d"
url.user <- sprintf(url.user, id)
webpage.url <- read_html(url.user)
# get the number of pages
user.class <- "._e296pg"
page <- webpage.url %>% html_nodes(user.class) %>% html_text()
page
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
# get the number of pages
user.class <- "._110nrr2"
page <- webpage.url %>% html_nodes(user.class) %>% html_text()
# get the number of pages
user.class <- "._110nrr2"
# get the number of pages
user.class <- "._ni9axhe"
page <- webpage.url %>% html_nodes(user.class) %>% html_text()
page
page
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
# get the number of pages
user.class <- "._e296pg"
page <- webpage.url %>% html_nodes(user.class) %>% html_text()
page
page <- webpage.url %>% html_nodes(user.class) %>% html_text("href")
page
page <- webpage.url %>% html_nodes(user.class) %>% html_text("class")
page
# get the number of pages
user.class <- "._110nrr2"
page <- webpage.url %>% html_nodes(user.class) %>% html_text("class")
page
page <- webpage.url %>% html_nodes(user.class) %>% html_attr("href")
page
# get the number of pages
user.class <- "._ni9axhe"
page <- webpage.url %>% html_nodes(user.class) %>% html_attr("href")
page
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
._110nrr2
# get the number of pages
user.class <- "._110nrr2"
page <- webpage.url %>% html_nodes(user.class) %>% html_attr("href")
page
flat_Berlin <- bnbScrap:::getHousesCity(city = 'Berlin', is.df = TRUE)
flat_Berlin <- bnbScrap:::getHousesCity(city = 'Berlin', is.df = TRUE)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getUsers.R')
cities.df
cities.df <- readxl:::read_xlsx('data/most-popular-cities.xlsx')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
library(bnbScrap:::sqlSendQuery())
devtools::load_all()
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
# Get the place id of the current city
gp_id <- bnbScrap:::sqlSendQuery(sprintf("select * from city where name = '%s'", city)) %>% pull(gp_id)
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
source('C:/Users/sofianembarki/Desktop/bnbProject/bnbScrap/R/getHousesCity.R')
library(bnbScrap)
bnbScrap:::sqlSendQuery()
sqlSendQuery
